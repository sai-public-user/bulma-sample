{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames2 = _interopRequireDefault(require(\"classnames\"));\n\nvar _modifiers = _interopRequireDefault(require(\"../../../modifiers\"));\n\nvar _constants = _interopRequireDefault(require(\"../../../constants\"));\n\nvar _element = _interopRequireDefault(require(\"../../element\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar colors = [null].concat(Object.keys(_constants[\"default\"].COLORS).map(function (key) {\n  return _constants[\"default\"].COLORS[key];\n}));\n\nvar Select = function Select(_ref) {\n  var _classnames;\n\n  var className = _ref.className,\n      style = _ref.style,\n      size = _ref.size,\n      color = _ref.color,\n      loading = _ref.loading,\n      readOnly = _ref.readOnly,\n      disabled = _ref.disabled,\n      value = _ref.value,\n      multiple = _ref.multiple,\n      children = _ref.children,\n      name = _ref.name,\n      domRef = _ref.domRef,\n      props = _objectWithoutProperties(_ref, [\"className\", \"style\", \"size\", \"color\", \"loading\", \"readOnly\", \"disabled\", \"value\", \"multiple\", \"children\", \"name\", \"domRef\"]);\n\n  return _react[\"default\"].createElement(_element[\"default\"], {\n    domRef: domRef,\n    className: (0, _classnames2[\"default\"])('select', className, (_classnames = {}, _defineProperty(_classnames, \"is-\".concat(size), size), _defineProperty(_classnames, \"is-\".concat(color), color), _defineProperty(_classnames, 'is-loading', loading), _defineProperty(_classnames, 'is-multiple', multiple), _classnames)),\n    style: style\n  }, _react[\"default\"].createElement(_element[\"default\"], _extends({\n    renderAs: \"select\"\n  }, props, {\n    multiple: multiple,\n    value: value,\n    readOnly: readOnly,\n    disabled: disabled,\n    name: name\n  }), children));\n};\n\nSelect.propTypes = _objectSpread({}, _modifiers[\"default\"].propTypes, {\n  children: _propTypes[\"default\"].node,\n  className: _propTypes[\"default\"].string,\n  style: _propTypes[\"default\"].shape({}),\n  size: _propTypes[\"default\"].oneOf(['small', 'medium', 'large']),\n  color: _propTypes[\"default\"].oneOf(colors),\n  readOnly: _propTypes[\"default\"].bool,\n  disabled: _propTypes[\"default\"].bool,\n  multiple: _propTypes[\"default\"].bool,\n  loading: _propTypes[\"default\"].bool,\n  value: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n\n  /**\n   * The name of the input field Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n   */\n  name: _propTypes[\"default\"].string\n});\nSelect.defaultProps = _objectSpread({}, _modifiers[\"default\"].defaultProps, {\n  children: null,\n  className: undefined,\n  value: '',\n  style: undefined,\n  size: undefined,\n  color: undefined,\n  readOnly: false,\n  disabled: false,\n  multiple: false,\n  loading: false,\n  name: undefined\n});\nvar _default = Select;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../src/components/form/components/select.js"],"names":["colors","CONSTANTS","Select","className","style","size","color","loading","readOnly","disabled","value","multiple","children","name","domRef","props","modifiers","PropTypes","string","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport modifiers from '../../../modifiers';\nimport CONSTANTS from '../../../constants';\nimport Element from '../../element';\n\nconst colors = [null].concat(\n  Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]),\n);\n\nconst Select = ({\n  className,\n  style,\n  size,\n  color,\n  loading,\n  readOnly,\n  disabled,\n  value,\n  multiple,\n  children,\n  name,\n  domRef,\n  ...props\n}) => (\n  <Element\n    domRef={domRef}\n    className={classnames('select', className, {\n      [`is-${size}`]: size,\n      [`is-${color}`]: color,\n      'is-loading': loading,\n      'is-multiple': multiple,\n    })}\n    style={style}\n  >\n    <Element\n      renderAs=\"select\"\n      {...props}\n      multiple={multiple}\n      value={value}\n      readOnly={readOnly}\n      disabled={disabled}\n      name={name}\n    >\n      {children}\n    </Element>\n  </Element>\n);\n\nSelect.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  color: PropTypes.oneOf(colors),\n  readOnly: PropTypes.bool,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  loading: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * The name of the input field Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n   */\n  name: PropTypes.string,\n};\n\nSelect.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: undefined,\n  value: '',\n  style: undefined,\n  size: undefined,\n  color: undefined,\n  readOnly: false,\n  disabled: false,\n  multiple: false,\n  loading: false,\n  name: undefined,\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"script"}